---
import type { Car } from '../types/CarDataTypes';

interface Props {
  car: Car;
}

const { car } = Astro.props;

function getSupportTypeColor(supportType: string): string {
  switch (supportType) {
    case 'Upstream':
      return 'bg-[#66D855] text-white';
    case 'Under review':
      return 'font-bold bg-[#F9C515] text-black';
    case 'Not compatible':
      return 'bg-[#D85555] text-white';
    case 'Community':
      return 'bg-[#819CE1] text-white';
    default:
      return 'bg-[#969696] text-white';
  }
}

function formatYears(yearList: string[]): string {
  if (yearList.length === 0) return 'N/A';
  if (yearList.length === 1) return yearList[0];
  return `${yearList[0]}-${yearList[yearList.length - 1]}`;
}
---

<!-- Support label -->
<div class={`py-1 px-6 inline-block border border-black border-b-0 text-center ${getSupportTypeColor(car.support_type)}`}>
  <p class="text-[16px] uppercase">{car.support_type}</p>
</div>

<!-- Card body -->
<div class="border border-black bg-[#F3F3F3] shadow min-h-[180px] flex flex-col">
  <div class="flex-grow">

    <!-- Year and Model -->
    <div class="flex border-b border-black">
      <div class="px-2 py-2.5 border-r border-black flex items-center">
        <h2 class="text-lg">{formatYears(car.year_list)}</h2>
      </div>
      <div class="px-2 py-2.5">
        <h1 class="text-xl font-semibold">{car.make} {car.model}</h1>
      </div>
    </div>

    <div class="px-2 py-2.5 border-b border-black h-[60px]">
      <p class="text-sm"><strong>ADAS Package:</strong> {car.package}</p>
    </div>
    <div class="px-2 py-2.5 border-b border-black">
      <p class="text-sm"><strong>Fingerprint:</strong> {car.car_fingerprint}</p>
    </div>

    <div class="flex flex-row justify-start divide-x divide-black">
      <p class="text-sm px-3 py-2">AWD</p>
      <p class="text-sm px-3 py-2">Gas</p>
      <p class="text-sm px-3 py-2">Hybrid</p>
    </div>

  </div>

  <!-- Hidden Checkbox for Toggling -->
  <input type="checkbox" id={`toggle-${car.name}-${car.car_fingerprint}`} class="hidden peer" />

  <!-- Additional Info -->
  <div class="bg-[#D9D9D9] overflow-hidden max-h-0 peer-checked:max-h-[400px] peer-checked:border-t peer-checked:border-black">
    <div class="p-4 grid grid-cols-2 gap-4">
      <div class="flex justify-between bg-white px-4 py-2 border border-black items-center">
        <span class="text-sm">Steering<br />Torque</span>
        <span>2048</span>
      </div>
      <div class="flex justify-between bg-white px-4 py-2 border border-black items-center">
        <span class="text-sm">Harness</span>
        <p>{car.harness ? car.harness : 'N/A'}</p>
      </div>
      <div class="flex justify-between bg-white px-4 py-2 border border-black items-center">
        <span class="text-sm">Lat<br />Control</span>
        <span>N/A</span>
      </div>
      <div class="flex justify-between bg-white px-4 py-2 border border-black items-center">
        <span class="text-sm">Long<br />Control</span>
        <span>N/A</span>
      </div>
    </div>
  </div>

  <!-- Toggle Button -->
  <label for={`toggle-${car.name}-${car.car_fingerprint}`} class="flex justify-center bg-[#969696] peer-checked:bg-[#D9D9D9] border-t border-black mt-auto py-1 cursor-pointer">
    <!-- Chevron -->
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="4 6 12 8" fill="none" stroke="white" stroke-width="2" stroke-linecap="square" stroke-linejoin="miter">
      <path d="M5.293 7.293L10 11.586l4.707-4.293" />
    </svg>
  </label>
</div>

<style>
  input:checked + div + label svg {
    transform: rotate(180deg);
    stroke: black;
  }
</style>
